<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Moderation - <%= guild.guildName %></title>
    <link rel="stylesheet" href="/css/style.css">
    <link rel="stylesheet" href="/css/dashboard.css">
</head>
<body>
    <%- include('../partials/header') %>
    
    <div class="dashboard-container">
        <aside class="dashboard-sidebar">
            <h2><%= guild.guildName %></h2>
            <nav class="dashboard-nav">
                <a href="/dashboard/<%= guild.guildId %>">Overview</a>
                <a href="/dashboard/<%= guild.guildId %>/moderation" class="active">üõ°Ô∏è Moderation</a>
                <a href="/dashboard/<%= guild.guildId %>/antiraid">üîí Anti-Raid</a>
                <a href="/dashboard/<%= guild.guildId %>/welcome">üëã Welcome/Goodbye</a>
                <a href="/dashboard/<%= guild.guildId %>/autoroles">üé≠ Auto Roles</a>
                <a href="/dashboard/<%= guild.guildId %>/leveling">üìä Leveling</a>
                <a href="/dashboard/<%= guild.guildId %>/music">üéµ Music</a>
                <a href="/dashboard/<%= guild.guildId %>/tickets">üé´ Tickets</a>
                <a href="/dashboard/<%= guild.guildId %>/custom-commands">‚öôÔ∏è Custom Commands</a>
                <% if (guild.premium.enabled) { %>
                    <a href="/dashboard/<%= guild.guildId %>/premium" class="premium-link">‚≠ê Premium</a>
                <% } %>
            </nav>
        </aside>
        
        <main class="dashboard-main">
            <div class="dashboard-header">
                <h1>üõ°Ô∏è Moderation Settings</h1>
            </div>
            
            <form class="settings-form" id="moderationForm">
                <div class="form-section">
                    <h3>General Settings</h3>
                    
                    <div class="form-group">
                        <label class="toggle-label">
                            <input type="checkbox" name="moderation.enabled" <%= guild.moderation.enabled ? 'checked' : '' %>>
                            <span class="toggle-slider"></span>
                            Enable Moderation Module
                        </label>
                    </div>
                    
                    <div class="form-group">
                        <label for="logChannel">Moderation Log Channel ID</label>
                        <input type="text" id="logChannel" name="moderation.logChannel" 
                               value="<%= guild.moderation.logChannel || '' %>" 
                               placeholder="Enter channel ID">
                        <small>The channel where moderation actions will be logged</small>
                    </div>
                    
                    <div class="form-group">
                        <label for="mutedRole">Muted Role ID</label>
                        <input type="text" id="mutedRole" name="moderation.mutedRole" 
                               value="<%= guild.moderation.mutedRole || '' %>" 
                               placeholder="Enter role ID">
                        <small>The role to assign to muted members</small>
                    </div>
                </div>
                
                <div class="form-section">
                    <h3>Auto-Moderation</h3>
                    
                    <div class="form-group">
                        <label class="toggle-label">
                            <input type="checkbox" name="moderation.autoMod.enabled" <%= guild.moderation.autoMod.enabled ? 'checked' : '' %>>
                            <span class="toggle-slider"></span>
                            Enable Auto-Moderation
                        </label>
                    </div>
                    
                    <div class="form-group">
                        <label class="toggle-label">
                            <input type="checkbox" name="moderation.autoMod.antiSpam" <%= guild.moderation.autoMod.antiSpam ? 'checked' : '' %>>
                            <span class="toggle-slider"></span>
                            Anti-Spam Protection
                        </label>
                        <small>Automatically detect and prevent spam messages</small>
                    </div>
                    
                    <div class="form-group">
                        <label class="toggle-label">
                            <input type="checkbox" name="moderation.autoMod.antiCaps" <%= guild.moderation.autoMod.antiCaps ? 'checked' : '' %>>
                            <span class="toggle-slider"></span>
                            Anti-Caps (Excessive Capitals)
                        </label>
                        <small>Prevent messages with excessive capital letters</small>
                    </div>
                    
                    <div class="form-group">
                        <label class="toggle-label">
                            <input type="checkbox" name="moderation.autoMod.antiLinks" <%= guild.moderation.autoMod.antiLinks ? 'checked' : '' %>>
                            <span class="toggle-slider"></span>
                            Anti-Links
                        </label>
                        <small>Block external links in messages</small>
                    </div>
                    
                    <div class="form-group">
                        <label class="toggle-label">
                            <input type="checkbox" name="moderation.autoMod.antiInvites" <%= guild.moderation.autoMod.antiInvites ? 'checked' : '' %>>
                            <span class="toggle-slider"></span>
                            Anti-Invites
                        </label>
                        <small>Block Discord server invites</small>
                    </div>
                    
                    <div class="form-group">
                        <label class="toggle-label">
                            <input type="checkbox" name="moderation.autoMod.antiMassMention" <%= guild.moderation.autoMod.antiMassMention ? 'checked' : '' %>>
                            <span class="toggle-slider"></span>
                            Anti-Mass Mention
                        </label>
                        <small>Prevent mass mentions/spam pings</small>
                    </div>
                    
                    <div class="form-group">
                        <label for="badWords">Bad Words List (comma-separated)</label>
                        <textarea id="badWords" name="moderation.autoMod.badWords" rows="4" 
                                  placeholder="word1, word2, word3"><%= guild.moderation.autoMod.badWords.join(', ') %></textarea>
                        <small>Words to automatically filter from messages</small>
                    </div>
                </div>
                
                <div class="form-actions">
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                    <button type="reset" class="btn btn-secondary">Reset</button>
                </div>
            </form>
        </main>
    </div>
    
    <%- include('../partials/footer') %>
    
    <script>
        document.getElementById('moderationForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            
            const formData = new FormData(e.target);
            const data = {};
            
            // Process form data
            for (let [key, value] of formData.entries()) {
                if (key.includes('.')) {
                    const keys = key.split('.');
                    let obj = data;
                    for (let i = 0; i < keys.length - 1; i++) {
                        if (!obj[keys[i]]) obj[keys[i]] = {};
                        obj = obj[keys[i]];
                    }
                    obj[keys[keys.length - 1]] = value;
                } else {
                    data[key] = value;
                }
            }
            
            // Handle checkboxes
            const checkboxes = e.target.querySelectorAll('input[type="checkbox"]');
            checkboxes.forEach(cb => {
                const keys = cb.name.split('.');
                let obj = data;
                for (let i = 0; i < keys.length - 1; i++) {
                    if (!obj[keys[i]]) obj[keys[i]] = {};
                    obj = obj[keys[i]];
                }
                obj[keys[keys.length - 1]] = cb.checked;
            });
            
            // Handle bad words array
            if (data.moderation?.autoMod?.badWords) {
                data.moderation.autoMod.badWords = data.moderation.autoMod.badWords
                    .split(',')
                    .map(w => w.trim())
                    .filter(w => w.length > 0);
            }
            
            try {
                const response = await fetch(`/api/guild/<%= guild.guildId %>`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(data)
                });
                
                if (response.ok) {
                    alert('Settings saved successfully!');
                    location.reload();
                } else {
                    alert('Failed to save settings. Please try again.');
                }
            } catch (error) {
                alert('An error occurred. Please try again.');
            }
        });
    </script>
</body>
</html>
